import pygame
import random
pygame.init()

screen = pygame.display.set_mode((800, 600)) #game window
pygame.display.set_caption("Flappy Bird") #game window title
clock = pygame.time.Clock() #handles FPS
font = pygame.font.Font(None, 36) #Font for displaying the score
font2 = pygame.font.Font(None, 72) #larger font



#animation variables could go here
frameWidth = 50
frameHeight = 50
RowNum = 0
frameNum = 0
ticker = 0

pipe_image = pygame.image.load('pipe2.png').convert_alpha()

background_image = pygame.image.load('pibble.png').convert_alpha()

#load in birb
bird_image = pygame.image.load('Bird (1).png').convert_alpha()

score = 0 #Score variable763VCG EW3

#Bird Class
class Bird:
    def __init__(self):
        self.y = 400
        self.velocity = 0
        
    def flap(self):
        self.velocity = -3 #flap

    def physics(self):
        self.velocity += 0.1 #gravity
        self.y += self.velocity
        
    def draw(self):
        pygame.draw.rect(screen, (255, 0, 0), (50, self.y, 30, 30))

bird = Bird()

#Pipe class
class Pipe:
    def __init__(self, x):
        self.x = x
        self.height = random.randint(50, 400)
        self.gap = 150 #Gap size between top and bottom pipes
        self.top_pipe = pygame.transform.flip(pipe_image, False, True)
        self.bottom_pipe = pipe_image
        
    def move(self):
        self.x -= 2 #Move pipes to the left
        
    def draw(self):
        top_height = self.height
        bottom_height = 800 - (self.height + self.gap)
        
        screen.blit(self.top_pipe, (self.x, top_height - self.top_pipe.get_height()))
        
        screen.blit(self.bottom_pipe, (self.x, self.height + self.gap))

pipes = []
spawn_pipe = 0 #timer for pipe spawn

def check_collision(bx, by, px, py):
    #TOP PIPE CHECK
    if bx + 30 > px and bx < px + 50 and by < py:
        return True
    #BOTTOM PIPE CHECK
    if bx + 30 > px and bx < px + 50 and by + 30 > py + 150:
        return True
    return False

ticker = 0

running = True
while running: #Game loop===========================================
    clock.tick(60)
    ticker+=1 #increment score
    if ticker%10 == 0:
        ticker = 0 #reset timer
        score+=1 #increment score
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.MOUSEBUTTONDOWN:
            bird.flap()
            
    #spaw pipes
    spawn_pipe += 1 #increment timer
    if spawn_pipe >= 150: #pipe is spawned every 150 frames
        pipes.append(Pipe(800)) #this INSTANTIATES a new pipe and puts it in the list!
        spawn_pipe = 0 #reset timer
    
    #move pipes!
    for pipe in pipes: #walk through list of pipe
        pipe.move() #move each pipe
        if check_collision(50, bird.y, pipe.x, pipe.height): #check collision with birb
            running = False #kill game if you hit a pole
        
    #destroy pipes that have gone off screen
    i = len(pipes) - 1 #start at end of list
    while i >= 0:
        if pipes[i].x <= -50: #check if pipes is off screen
            pipes.pop(i) #remove from list
        i -= 1 #this increments the while loop
            
    bird.physics()       
    #render section----------------------------------------
    
    screen.blit(background_image, (0, 0))
    
    #spritesheet movement
    ticker+=1
    if ticker%10==0:
      frameNum+=1
   
    if frameNum>1:
      frameNum = 0
    
    #draw the birb
    screen.blit(bird_image, (50, bird.y), (frameWidth*frameNum, RowNum*frameHeight, frameWidth, frameHeight))
    
    score_text = font.render("Score:", True, (255, 255, 255))
    screen.blit(score_text, (650, 20)) #Position the score in the top-right corner
    score_text2 = font.render(str(score), True, (255, 255, 255))
    screen.blit(score_text2, (750, 20)) #Position the score in the top-right corner
    
    #bird.draw()
    for pipe in pipes:
        pipe.draw()
    
    pygame.display.flip()
    
    
#---end of game loop-------------------------
 
text = font2.render("GAME OVER", True, (255, 50,50))
screen.blit(text, (200, 200)) #Position the score in the top-right corner
pygame.display.flip()
pygame.time.delay(2000) #delay in milliseconds
pygame.quit()
